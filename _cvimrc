" Settings
let scrollduration=0

"set nohud
set nosmoothscroll
set noautofocus 
" The opposite of autofocus; this setting stops
" sites from focusing on an input box when they load
set typelinkhints
set cncpcompletion


let searchlimit = 30
let scrollstep = 70
let barposition = "bottom"

let locale = "cn" 
" Current choices are 'jp' and 'uk'. This allows cVim to use sites like google.co.uk
" or google.co.jp to search rather than google.com. Support is currently limited.
" Let me know if you need a different locale for one of the completion/search engines
let hintcharacters = "qweasdzxcfjlkopnm"

let searchengine baidu = "http://www.baidu.com/s?wd=%s" 
" If you leave out the '%s' at the end of the URL,
" your query will be appended to the link.
" Otherwise, your query will replace the '%s'.

let completionengines = ["google", "baidu"]

let searchalias g = "google" 
let searchalias b = "baidu" 
" Create a shortcut for search engines.
" For example, typing ':tabnew g example'
" would act the same way as ':tabnew google example'

" Open all of these in a tab with `gnb` or open one of these with <N>goa where <N>
"todo
let qmark a = [ "http://www.google.com", "http://www.baidu.com"]

let blacklists = ["https://mail.google.com/*", "*://mail.google.com/*" ]
let mapleader = ","
let previousmatchpattern="(back|上一*|前一*|less|<)+"
let nextmatchpattern="(next|more|>|下一*|后一*|forward)+"

" Mappings 
map <Leader>r reloadTabUncached
map <Leader>x :restore<Space>

map d nextTab
map a previousTab
map <C-v> scrollFullPageDown
map <A-v> scrollFullPageUp
map <C-d> scrollPageDown
map <C-a> scrollPageUp
map s scrollPageDown
map w scrollPageUp

map qq :tabnew google 
map qw :tabnew google 
map e f
map E F

"todo
map ] ]]
map [ [[

" You can use <Space>, which is interpreted as a
" literal " " character, to enter buffer completion mode
map gb :buffer<Space>


" Toggle the current HUD display value
map <C-h> :set hud!<CR>

" Switch between alphabetical hint characters and numeric hints
map <C-i> :set numerichints!<CR>

map <C-u> rootFrame
map <M-h> previousTab

iunmap <C-y>
imap <C-m> deleteWord

" Create a variable that can be used/referenced in the command bar
let @@reddit_prog = 'http://www.reddit.com/r/programming'
let @@top_all = 'top?sort=top&t=all'
let @@top_day = 'top?sort=top&t=day'

" TA binding opens 'http://www.reddit.com/r/programming/top?sort=top&t=all' in a new tab
map TA :to @@reddit_prog/@@top_all<CR>
map TD :to @@reddit_prog/@@top_day<CR>
